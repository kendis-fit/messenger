@{
	ViewBag.Title = "Ms";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@section MetaReferences {
	<link rel="stylesheet" type="text/css" href="~/Content/Ms.css" />
	<script type="text/javascript">
		var key = localStorage.getItem("key1");
		if (key == null)
			window.location.href = "/Visit/Login";
	</script>
}

<header id="Page">
	<div id="Panel">
		<div id="Drop-DownList">
			<img id="ImgDrop-DownList" />
			<ul id="" style="display: none">
				<li id="Profile">
					<img id="ImgProfile" />
					<span>Profile</span>
				</li>
				<li id="Settings">
					<img id="ImgSettings" />
					<span>Settings</span>
				</li>
				<li id="About">
					<img id="ImgAbout" />
					<span>About</span>
				</li>
			</ul>
		</div>
		<div id="Limonne">
			<a href="/Account/Ms">Limonne</a>
		</div>
		<button type="button" id="Exit">Exit</button>
	</div>
	<div id="Main">
		<div id="SearchAndFriends">
			<div id="Search">
				<img id="SearchIcon" src="~/Images/search.png" />
				<input type="text" placeholder="search" id="SearchInput" />
			</div>
			<ul id="Friends">
			</ul>
		</div>
		<div id="MessagesAndInputs">
			<ul id="Messages">
				<li id="NotSelectedFriend">
					<span>Select a friend</span>
				</li>
			</ul>
			<div id="InputMessage">
				<textarea placeholder="write a message" id="MessageByUser"></textarea><br>
				<button type="button" id="SendMessage"><span>Send</span></button>
			</div>
		</div>
	</div>
</header>

@section Scripts {
	<script src="~/Scripts/ms.js"></script>
	<script type="text/javascript">
		$(document).ready(function () {
			var api = ApiRequest(localStorage.getItem("key1"));
			var page = {
				dynamicMessage: DynamicMessage(),
				dynamicFriend: DynamicFriend()
			}
			var friends = null;
			api.GetInfo(function (user) {
				sessionStorage.setItem("user", JSON.stringify(user));
			});
			api.ShowFriends(function (users) {
				page.dynamicFriend.Show(users);
				friends = users;
			});
			$("#SearchInput").keyup(function (event) {
				var search = $("#SearchInput").val();
				if (search != null && ((event.keyCode >= 97 && event.keyCode <= 122) ||
					(event.keyCode >= 65 && event.keyCode <= 90) || (event.keyCode >= 48 && event.keyCode <= 57) ||
					event.keyCode == 95)) {
					api.SearchFriends(search, page.dynamicFriend.Show);
				}
				else if (search == null || search.length == 0) {
					page.dynamicFriend.Show(friends);
				}
			});
			$("#Exit").click(function () {
				localStorage.removeItem("key1");
				window.location.href = "/Visit/Login";
			});
			$("#Friends").on("click", ".Friend", function (event) {
				var friend = {
					"Login": $(this).data("login"),
					"Name": $(this).find(".Name").text()
				};
				sessionStorage.setItem("friend", JSON.stringify(friend));
				page.dynamicFriend.Select();
				api.ShowMessages(friend.Login, page.dynamicMessage.Show);
			});
			$("#MessageByUser").keyup(function (event) {
				var message = $("#MessageByUser").val().slice(0, -1);
				var keyEnter = 13;
				if (event.keyCode == keyEnter) {
					if (!IsEmptyMessage(message))
						SendMessage();
				}
			});
			$("#SendMessage").click(function () {
				var message = $("#MessageByUser").val();
				if (!IsEmptyMessage(message))
					SendMessage();
			});

			function IsEmptyMessage(str) {
				if (str == null || str.length == 0)
					return true;
				for (var i = 0; i < str.length; ++i) {
					var symbol = str[i].charCodeAt(0);
					console.log(symbol);
					if (!((symbol >= 0 && symbol <= 32) || symbol == 127))
						return false;
				}
				return true;
			};

			function SendMessage() {
				var message = $("#MessageByUser").val();
				var friend = JSON.parse(sessionStorage.getItem("friend"));
				var user = JSON.parse(sessionStorage.getItem("user"));
				var name = user.FirstName + " " + user.LastName;
				$("#MessageByUser").val("");
				page.dynamicMessage.Append(name, message);
				var countMessages = $('.Message').length;
				if (countMessages == 1) {
					api.CreateFriendship(friend.Login, message, new Date().toUTCString());
					var newFriend = {
						"Login": friend.Login,
						"FirstName": friend.Name.split(" ")[0],
						"LastName": friend.Name.split(" ")[1],
						"LastMessage": message
					};
					friends.push(newFriend);
				}
				else {
					for (var frnd in friends)
						if (frnd.Login == friend.Login)
							frnd.LastMessage = message;
					api.SendMessage(friend.Login, message, new Date().toUTCString());
					search = $("#SearchInput").val();
				}
				page.dynamicMessage.Update(friend.Login, message);
			};
			// future functional:
			// in real time show to client online his friend
			// in real time get with client a messages from friends
		});
	</script>
}


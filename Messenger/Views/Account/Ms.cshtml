@{
	ViewBag.Title = "Ms";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@section MetaReferences {
	<link rel="stylesheet" type="text/css" href="~/Content/Ms.css" />
	<script type="text/javascript">
		var key = localStorage.getItem("key1");
		if (key == null)
			window.location.href = "/Visit/Login";
	</script>
}

<header id="Page">
	<div id="Panel">
		<div id="Drop-DownList">
			<img id="ImgDrop-DownList" />
			<ul id="" style="display: none">
				<li id="Profile">
					<img id="ImgProfile" />
					<span>Profile</span>
				</li>
				<li id="Settings">
					<img id="ImgSettings" />
					<span>Settings</span>
				</li>
				<li id="About">
					<img id="ImgAbout" />
					<span>About</span>
				</li>
			</ul>
		</div>
		<div id="Limonne">
			<a href="/Account/Ms">Limonne</a>
		</div>
		<div id="UserInfo">
			<span class="Name"></span>
			<time class="LastSeen"></time>
		</div>
		<button type="button" id="Exit">Exit</button>
	</div>
	<div id="Main">
		<div id="SearchAndFriends">
			<div id="Search">
				<img id="SearchIcon" src="~/Images/search.png" />
				<input type="text" placeholder="search" id="SearchInput" />
			</div>
			<div id="ScrollFriends">
				<table id="Friends">
				</table>
			</div>
		</div>
		<div id="MessagesAndInputs">
			<div id="NotSelectedFriend">Select a chat</div>
			<div id="ScrollMessages">
				<table id="Messages">
				</table>
			</div>
			<div id="InputMessage">
				<textarea placeholder="write a message" id="MessageByUser"></textarea><br>
				<button type="button" id="SendMessage"><span>Send</span></button>
			</div>
		</div>
	</div>
</header>

@section Scripts {
	<script type="text/javascript" src="~/Scripts/jquery.signalR-2.4.0.min.js"></script>
	<script src="~/signalr/hubs"></script>
	<script type="text/javascript" src="~/Scripts/ms.js"></script>
	<script type="text/javascript">
		$(document).ready(function () {
			// init
			var sessionInfo = {
				user: null,
				friend: null
			}
			var real_time = $.connection.apiHub;
			var api = ApiRequest(localStorage.getItem("key1"));
			var page = {
				dynamicMessage: DynamicMessage(),
				dynamicFriend: DynamicFriend()
			}
			// begin: main info
			api.GetInfo(function (user) {
				sessionInfo.user = user;
			});
			api.ShowFriends(function (users) {
				page.dynamicFriend.Show(users);
			});
			// begin: real-time
			real_time.client.getMessage = function (login, message) {
				message.DateTime = new Date(message.DateTime);
				if (sessionInfo.friend != null) {
					if (login == sessionInfo.friend.Login) {
						message.Avatar = sessionInfo.friend.Avatar;
						page.dynamicMessage.Append(message);
					}
				}
				if (page.dynamicMessage.ExistsCountNotRead(login)) {
					page.dynamicMessage.UpdateCountNotRead(login);
				}
				else {
					page.dynamicMessage.CreateCountNotRead(login);
				}
				page.dynamicMessage.Update(login, message);
			};
			real_time.client.isOnlineFriend = function (user) {
				if (sessionInfo.friend != null) {
					if (user.Login == sessionInfo.friend.Login) {
						user.LastSeen = new Date(user.LastSeen);
						page.dynamicFriend.Select(user);
					}
				}
			};
			// events
			$("#SearchInput").keyup(function (event) {
				var search = $("#SearchInput").val();
				if (search != null)/* && ((event.keyCode >= 97 && event.keyCode <= 122) ||
					(event.keyCode >= 65 && event.keyCode <= 90) || (event.keyCode >= 48 && event.keyCode <= 57) ||
					event.keyCode == 95))*/ {
					//api.SearchFriends(search, page.dynamicFriend.Show);
					page.dynamicFriend.Search(search);
				}
				else if (search == null || search.length == 0) {
					api.ShowFriends(page.dynamicFriend.Show);
				}
			});
			$("#Exit").click(function () {
				localStorage.removeItem("key1");
				window.location.href = "/Visit/Login";
			});
			$("#Friends").on("click", ".Friend", function (event) {
				sessionInfo.friend = {
					"Login": $(this).data("login"),
					"Name": $(this).find(".Name").text(),
					"Avatar": $(this).find("img").attr("src")
				};
				if (page.dynamicMessage.ExistsCountNotRead(sessionInfo.friend.Login)) {
					api.RemoveCountNotReadMessages(sessionInfo.friend.Login);
					page.dynamicMessage.RemoveCountNotRead(sessionInfo.friend.Login);
				}
				api.ShowMessages(sessionInfo.friend.Login, function (messages) {
					page.dynamicMessage.Show(messages, sessionInfo.user, sessionInfo.friend);
				});
				api.GetInfoFriend(sessionInfo.friend.Login, function (friend) {
					friend.LastSeen = Date.ParseServerDate(friend.LastSeen);
					page.dynamicFriend.Select(friend);
				});
			});

			$.connection.hub.start().done(function () {
				real_time.server.connect(api.Key);
				$("#MessageByUser").keyup(function (event) {
					var mess = $("#MessageByUser").val().slice(0, -1);
					var keyEnter = 13;
					if (event.keyCode == keyEnter) {
						if (!IsEmptyMessage(mess)) {
							var message = {
								"Name": sessionInfo.user.FirstName + " " + sessionInfo.user.LastName,
								"Text": mess,
								"DateTime": new Date()
								//"Avatar": sessionInfo.user.Avatar
							};
							$("#MessageByUser").val("");
							page.dynamicMessage.Append(message);
							SendMessage(sessionInfo.friend.Login, message, function () {
								real_time.server.send(api.Key, sessionInfo.user.Login, sessionInfo.friend.Login, message);
							});
						}
					}
				});
				$("#SendMessage").click(function () {
					var mess = $("#MessageByUser").val();
					if (!IsEmptyMessage(mess)) {
						var message = {
							"Name": sessionInfo.user.FirstName + " " + sessionInfo.user.LastName,
							"Text": mess,
							"DateTime": new Date()
							//"Avatar": sessionInfo.user.Avatar
						};
						$("#MessageByUser").val("");
						page.dynamicMessage.Append(message);
						SendMessage(sessionInfo.friend.Login, message, function () {
							real_time.server.send(api.Key, sessionInfo.user.Login, sessionInfo.friend.Login, message);
						});
					}
				});
			});

			function IsEmptyMessage(str) {
				if (str == null || str.length == 0)
					return true;
				for (var i = 0; i < str.length; ++i) {
					var symbol = str[i].charCodeAt(0);
					if (!((symbol >= 0 && symbol <= 32) || symbol == 127))
						return false;
				}
				return true;
			};

			function SendMessage(login, message, callback) {
				var countMessages = $('.Message').length;
				if (countMessages == 1) {
					api.CreateFriendship(login, message.Text, message.DateTime.toLocaleString(), callback);
				}
				else {
					api.SendMessage(login, message.Text, message.DateTime.toLocaleString(), callback);
				}
				page.dynamicMessage.Update(login, message);
			};
		});
	</script>
}

